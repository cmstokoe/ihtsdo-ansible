---
- name: Install package
  apt: name={{ authoringui_app_name }} state=installed update_cache=yes
  when: authoringui_version == 'installed'

- name: Install latest package
  apt: name={{ authoringui_app_name }} state=latest update_cache=yes
  when: authoringui_version == 'latest'

- name: Install package specific version
  apt: name={{ authoringui_app_name }}={{ authoringui_version }} state=installed update_cache=yes
  when: authoringui_version != 'installed' and authoringui_version != 'latest'

- name: Creates conf directory
  file: path={{ authoringui_conf_dir }} state=directory

- name: Configure endpointConfig.json
  template: src=endpointConfig.json.j2 dest="{{ authoringui_conf_dir }}/endpointConfig.json"
              owner=root group=root mode=0644

- name: Remove UAT ribbon
  file: path=/opt/authoring-ui/lib/images/uat_ribbon.png state=absent
  when: ansible_hostname | search("prod")

- name: Remove Development ribbons
  file: path=/opt/authoring-ui/lib/images/development_ribbon.png state=absent
  when: ansible_hostname | search("prod")

- name: Query versions list
  shell: "dpkg -s {{ item }} 2>&1 | grep Version | cut -d' ' -f2"
  register: versions
  with_items:
    - authoring-ui
    - terminology-server-browser
    - authoring-services
    - authoring-traceability-service
    - termserver
    - orchestration-service
    - snomed-template-service
    - spellcheck-service

- name: Configure versions.json
  template: src=versions.json.j2 dest="{{ authoringui_conf_dir }}/versions.json"
              owner=root group=root mode=0644
