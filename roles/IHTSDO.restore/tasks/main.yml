#- name: Install zip
#  apt: name=zip state=present update_cache=yes cache_valid_time=300

#- name: Install unzip
#  apt: name=unzip state=present update_cache=yes cache_valid_time=300

#- name: Install rsync
#  apt: pkg=rsync state=latest update_cache=yes cache_valid_time=3600  


- name: Check if wget is installed
  command: dpkg -s wget
  register: package_check_deb

- name: Install wget
  apt: name=wget state=present update_cache=yes cache_valid_time=300
  when: package_check_deb.rc == 1  



#- name: include prod settings
#  include_vars: "{{ system_prod }}"
#  when: system_type =="prod"  

- include_vars: "{{role_path}}/../IHTSDO.backup/defaults/main.yml"

#- debug: msg="restore_fromhostname = {{restore_fromhostname}}"
#- debug: msg="playbook_dir  = {{ playbook_dir }}"
#- debug: msg="role_path  = {{ role_path }}"

- name: include includevars yml when restore_fromhostname is defined and not empty
  include: includevars.yml
  when: not (restore_fromhostname is undefined or restore_fromhostname is none or restore_fromhostname | trim == '')

- debug: msg="restore_s3_restore_dir = {{restore_s3_restore_dir}}"
  when: restore_s3_restore_dir  is defined
  
- debug: msg="restore_app_name = {{restore_app_name}}"
  when: restore_app_name  is defined

- name: include restore yml when app name is defined and not empty
  include: restore.yml
  when: not (restore_app_name is undefined or restore_app_name is none or restore_app_name | trim == '')

#- debug: msg="vars = {{hostvars[inventory_hostname]}}"

#- debug: msg="example_var1 = {{example_var1}}"
#  when: example_var1  is defined

  

- debug: msg="Please set a restore_app_name. Exiting now"
  when: restore_app_name is undefined or restore_app_name is none or restore_app_name | trim == ''
  
  
  