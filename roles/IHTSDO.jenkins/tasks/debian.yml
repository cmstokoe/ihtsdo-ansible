

#- name: Setup apt key
#  apt_key: data="{{ lookup('file', 'jenkins-ci.org.key') }}" state=present

- name: Install  package signing key
  apt_key: url={{ jenkins_apt_key }} state=present validate_certs=no

- name: Setup apt repository
  apt_repository: repo='{{ jenkins_apt_repository }}' state=present

- name: Update apt cache
  apt: update_cache=yes cache_valid_time=3600
  sudo: yes

- name: Install jenkins
  apt: name=jenkins state=installed
  when: jenkins_version == 'installed'
   
- name: Install latest jenkins
  apt: name=jenkins state=latest
  when: jenkins_version == 'latest'

- name: Install jenkins specific version
  apt: name=jenkins={{ jenkins_version }} state=installed
  when: jenkins_version != 'installed' and jenkins_version != 'latest'
  
- name: Install Nodejs (for js builds)
  apt: pkg=nodejs state=latest update_cache=yes cache_valid_time=3600
  when: jenkins_node == 'true'
  
- name: Install npm (for js build using grunt, bower etc)
  apt: pkg=npm state=latest update_cache=yes cache_valid_time=3600 
  when: jenkins_npm == 'true'

- name: Install xmlstarlet
  apt: pkg=xmlstarlet state=latest update_cache=yes cache_valid_time=3600    
   
- name: Install rsync (used to get existing jenkins instance data if existing instance exists)
  apt: pkg=rsync state=latest update_cache=yes cache_valid_time=3600  
  
- name: Install git 
  apt: pkg=git state=latest update_cache=yes cache_valid_time=3600         
   
- name: Configure location.xml
  template: src={{ jenkins_model_location }}.j2 dest={{jenkins_data_dir}}/{{ jenkins_model_location }}
            owner={{jenkins_user}} group={{jenkins_user}} mode=0644          
   
- name: Set Jenkins startup config
  template: >
    src=debian_jenkins.j2 dest=/etc/default/jenkins
    owner=root group=root mode=0644
  notify:
    - restart jenkins
  tags:
    - jenkins

