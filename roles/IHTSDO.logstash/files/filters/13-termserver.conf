filter {
  if [type] == "confluence" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime}] +%{LOGLEVEL:logLevel} +%{DATA:threadHost} +%{GREEDYDATA:logMessage}" }
    }
  }

  if [type] == "termserver" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime}] +%{LOGLEVEL:logLevel} +%{DATA:threadHost} +%{JAVACLASS:class} +%{GREEDYDATA:logMessage}" }
    }
  }

  if [type] == "authoring" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime}] +%{LOGLEVEL:logLevel} +%{GREEDYDATA:authoringMessage}" }
    }
  }

  if [type] == "authoring-services" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime} +%{LOGLEVEL:logLevel} +%{DATA:threadHost} +%{JAVACLASS:class} +%{GREEDYDATA:logMessage}" }
    }
  }

  if [type] == "activemq" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime} | +%{LOGLEVEL:logLevel} | +%{GREEDYDATA:logMessage}" }
    }
  }

  if [type] == "orchestration" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime} | +%{LOGLEVEL:logLevel} | +%{GREEDYDATA:logMessage}" }
    }
  }

  if [type] == "crs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:logTime} | +%{LOGLEVEL:logLevel} | +%{GREEDYDATA:logMessage}" }
    }
  }

  date {
    match => ["logTime", "yyyy-MM-dd HH:mm:ss.SSS"]
  }

  json {
    source => "authoringMessage"
    target => "data"
  }

  mutate {
    remove_field => "[data][changes]"
  }
}
