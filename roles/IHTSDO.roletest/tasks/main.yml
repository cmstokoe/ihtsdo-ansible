---
#include system vars
- include: ../../../library/system/systemchoice.yml

- debug: msg="sys_type  =  {{ sys_type }} "
- debug: msg="version_term_serv  =  {{ version_term_serv }} "


# - name: SSH Tunnel management for zabbix
#   include: tunnel_mgt.yml
#   when: "zabbixserver_tunnel == True"





#- name: include aws settings
#  include_vars: "{{ aws_settings }}"
  
#- name: include srs settings
#  include_vars: "{{ srs_settings }}"  

#- name: include orchestration settings
#  include_vars: "{{ orch_settings }}" 
  
#- name: include smtp settings
#  include_vars: "{{ smtp_settings }}"     
  

#- debug: msg="snomed_release_service_api_aws_key  =  {{ snomed_release_service_api_aws_key }} "
#- debug: msg="smtp_password  =  {{ smtp_password }} "
#- debug: msg="orchestration_jms_password  =  {{ orchestration_jms_password }} "
#- debug: msg="snomed_release_service_api_encryption_salt  =  {{ snomed_release_service_api_encryption_salt }} "


- debug: msg="sys_type  =  {{ sys_type }} "


#- debug: msg="test_dir  =  {{ test_dir }} "




#- name: see if test dir exists
#  stat: path={{test_dir}}
#  register: p  
 
#- debug: msg="test_dir_exists.stat.exists  =  {{ p.stat.exists }} " 

#- debug: msg="Path exists and is a directory"
#  when: p.stat.isdir is defined and p.stat.isdir
  
#- debug: msg="Path exists and is a directory size =  {{ p.stat.size }} "
#  when: p.stat.isdir is defined and p.stat.isdir  
  
#- find: paths="{{test_dir}}"  
#  register: f
  
#- debug: msg="f.matched  =  {{ f.matched }} " 


#- debug: msg="p.stat.isdir  =  {{ p.stat.isdir }} " 
#- debug: msg="p.stat.size  =  {{ p.stat.size }} " 