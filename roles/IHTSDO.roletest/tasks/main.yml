---
#
#
#- include: "{{role_path}}/../tempsystem/systemchoice.yml"
#- include: files/systemchoice.yml  

- debug: msg="Role Test running. "
- debug: msg="nginx_ssl_key_filename = {{nginx_ssl_key_filename}} "


#- name: set zabbix repo to https
#  replace:
#      dest=/etc/apt/sources.list.d/repo_zabbix_com_zabbix_3_0_ubuntu.list
#      regexp='http://repo.zabbix.com'
#      replace='https://repo.zabbix.com'

#- name: Update apt cache
#  apt: update_cache=yes cache_valid_time=3600
#  sudo: yes


#- name: Check if zip is installed
#  command: dpkg -s zip
#  register: package_check_deb
#  ignore_errors: yes

#- name: Install zip
#  apt: name=zip state=present update_cache=yes cache_valid_time=300
#  when: package_check_deb.rc == 1
  
#- debug: msg="package_check_deb  =  {{ package_check_deb }} "  
#- debug: msg="package_check_deb.rc  =  {{ package_check_deb.rc }} "  


#- name: Check if unzip is installed
#  command: dpkg -s unzip
#  register: package_check_deb
#  failed_when: package_check_deb.rc > 1
#  changed_when: package_check_deb.rc == 1
  
#- debug: msg="package_check_deb unzip  =  {{ package_check_deb }} "  
#- debug: msg="package_check_deb.rc unzip =  {{ package_check_deb.rc }} "  









# - debug: msg="test_var  =  {{ test_var }} "
#- debug: msg="{{ hostvars['jenkins.ihtsdotools.org']['ansible_all_ipv4_addresses'] }}"

#- debug: msg="{{ hostvars[inventory_hostname]['ansible_all_ipv4_addresses'] }}"

#- set_fact: 
#   example_var: "{{ hostvars[item]['ansible_eth0']['ipv4']['address'] }}"
#  with_items: "jenkins.ihtsdotools.org" 
#  with_items: "{{restore_fromhostname}}"
   
#- debug: msg="example_var  =  {{ example_var }} "  


#- shell: "getent hosts {{restore_fromhostname}} | awk '{ print $1 }'"
#  register: ip_addr
#  ignore_errors: True

#- debug: msg="ip addr for {{restore_fromhostname}} = {{ip_addr.stdout_lines[0]}}"

#- debug: msg="jenkins  = {{ hostvars['jenkins.ihtsdotools.org']['ansible_all_ipv4_addresses']}}"

#- include: addTestResources.yml
#  when: not((term_serv_test_res_S3_bucket is undefined) or (term_serv_test_res_S3_bucket is none) or (term_serv_test_res_S3_bucket|trim == ''))
 
#- debug: msg="sys_type  =  {{ sys_type }} "
#- debug: msg="version_term_serv  =  {{ version_term_serv }} "
#- debug: msg="Role path  =  {{role_path}} "

#- debug: msg="sys_type  =  {{ sys_type }} "
#- debug: msg="test_dir  =  {{ test_dir }} "

#- name: see if test dir exists
#  stat: path={{test_dir}}
#  register: p  
 
#- debug: msg="test_dir_exists.stat.exists  =  {{ p.stat.exists }} " 

#- debug: msg="Path exists and is a directory"
#  when: p.stat.isdir is defined and p.stat.isdir
  
#- debug: msg="Path exists and is a directory size =  {{ p.stat.size }} "
#  when: p.stat.isdir is defined and p.stat.isdir  
  
#- find: paths="{{test_dir}}"  
#  register: f
  
#- debug: msg="f.matched  =  {{ f.matched }} " 
#- debug: msg="p.stat.isdir  =  {{ p.stat.isdir }} " 
#- debug: msg="p.stat.size  =  {{ p.stat.size }} " 

#- debug: msg="update key  =  {{ test_var }} "
#  tags: 
#   - updatekey