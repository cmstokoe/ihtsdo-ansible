
- name: Update apt cache
  apt: update_cache=yes cache_valid_time=300
  sudo: yes

  #include system vars
- include: system.yml 

  
  #Setup the database
- include: db.yml

- name: Install latest git package
  apt: name=git state=latest  
  
  
- name: Install latest libfontconfig1 package
  apt: name=libfontconfig1 state=latest  
  
- name: Install javascript frameworks for angular etc  
  include: js.yml
  when: "cis_install_js == True"

- name: stop app
  supervisorctl: name={{ cis_app_name }} state=stopped 
  
- name: rem install dir
  file: path={{ cis_install_dir }} state=absent
 

  
#- name: Install rest api from github - termmed 
#  git: repo=https://github.com/termMed/component-identifier-service.git dest={{ cis_install_dir }}

- debug: msg="cis_version = {{cis_version}}"

- name: Install rest api from github 
  git: repo=https://github.com/IHTSDO/component-identifier-service.git dest={{ cis_install_dir }} version={{cis_version}}
 
- name: Install rest server based on package.json.
  npm: path={{ cis_install_dir }}
  
#- name: config create schema
#  command: "{{cis_node_dir}} {{ cis_install_dir }}/config/createSchema.js dbuser={{ cis_db_user }} dbpass={{ cis_db_pw }}"
  
#- name: config create additonal ids
#  command: "{{cis_node_dir}} {{ cis_install_dir }}/config/initializeIdSchemes.js dbuser={{ cis_db_user }} dbpass={{ cis_db_pw }}" 

- debug: msg="ansible_hostname = {{ansible_hostname}}"
- debug: msg="inventory_hostname = {{inventory_hostname}}"

- replace: dest={{ cis_install_dir }}/api/swagger-ids.json regexp='localhost' replace='{{inventory_hostname}}'


- name: Configure supervisor
  template: src=supervisor.conf.j2 dest="{{ supervisor_dir }}/{{ cis_app_name }}.conf"
              owner=root group=root mode=0640  
              
#- name: Configure run script
#  template: src=runCis.sh.j2 dest={{cis_run_script}}
#              owner=root group=root mode=0770  
              
#- name: Add crowd_url to Env file
#  lineinfile: 
#     dest={{ env_file }}  
#     line="crowd_url="{{cis_crowd_url}}""
#     state=present
#     regexp='^crowd_url='              
 
#- name: Add crowd_app_name to Env file
#  lineinfile: 
#     dest={{ env_file }}  
#     line="crowd_app_name="{{cis_crowd_app_name}}""
#     state=present
#     regexp='^crowd_app_name='
      
#- name: Add crowd_app_password to Env file
#  lineinfile: 
#     dest={{ env_file }}  
#     line="crowd_app_password="{{cis_crowd_pw}}""
#     state=present
#     regexp='^crowd_app_password='
 
 
# --------------ADD Javascript munging for the above vars----------------- 
 
- debug: msg="cis_crowd_url = {{cis_crowd_url}}" 
- debug: msg="cis_security_file = {{cis_security_file}}" 
 
- name: Add crowd_url to Security file
  lineinfile: 
     dest={{ cis_security_file }}  
     line='"base":"{{cis_crowd_url}}"'
     state=present
     regexp='"base"\:'
     
- name: Add cis_crowd_app_name to Security file
  lineinfile: 
     dest={{ cis_security_file }}  
     line='"name":"{{cis_crowd_app_name}}",'
     state=present
     regexp='"name"\:'      
 
- name: Add crowd_app_password to Security file
  lineinfile: 
     dest={{ cis_security_file }}  
     line='"password":"{{cis_crowd_pw}}"'
     state=present
     regexp='"password"\:'

                          
- name: restart nginx
  service: name=nginx state=restarted    
  
- name: allow port 3000 through the firewall  
  ufw: rule=allow port=3000 proto=any    
  
  #Setup the database content
- include: dbcontent.yml                         
  when: cis_add_dbcontent == true
              
- name: (re)start app
  supervisorctl: name={{ cis_app_name }} state=restarted              

 