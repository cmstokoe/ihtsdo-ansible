#{{ ansible_managed }}
server {
  server_name {{ inventory_hostname }};
  listen 80;
  rewrite ^ https://$host$request_uri permanent;
  #endofhttpServer
}

server {
  server_name {{ inventory_hostname }};
  listen 443 ssl;

  ssl_certificate     /etc/ssl/certs/ihtsdotools2016.chained.crt;
  ssl_certificate_key /etc/ssl/private/ihtsdotools2016.key;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS';
  ssl_session_cache shared:SSL:50m;
  ssl_session_timeout 5m;

  add_header Strict-Transport-Security max-age=15768000;

  set $secure off;
  if ($scheme = https) {
        set $secure on;
  }

  root /opt/terminology-server-browser/lib;
  index index.html test-components.html;

  location / {
    try_files $uri $uri/ =404;
  }

  location = /auth {
    proxy_pass https://{{ ims.instance }}/api/account;
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header Accept "application/json";
    proxy_method GET;
    proxy_intercept_errors on;
    error_page 302 404 400 =403 @unauthorised;
  }

  location @unauthorised  {
    return 403;
  }

  location /ims-api {
   proxy_pass https://{{ ims.instance }}/api;
  }

  location /traceability-service {
    proxy_pass http://localhost:8085/;
 }

 location /authoring {
   alias /opt/template-based-authoring-frontend/lib;
 }

 location /snowowl {

       proxy_pass http://localhost:8080/snowowl;
       proxy_http_version 1.1;
       proxy_set_header Connection "";
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       proxy_connect_timeout 150;
       proxy_send_timeout 100;
       proxy_read_timeout 100;
       proxy_buffers 4 32k;
       client_max_body_size 8m;
       client_body_buffer_size 128k;
       proxy_busy_buffers_size    64k;
       proxy_temp_file_write_size 64k;
       proxy_set_header X-Forwarded-Proto "https";
       proxy_set_header X-Url-Scheme $scheme;
       proxy_redirect http:// https://;
       proxy_set_header X-Forwarded-Ssl $secure;
       proxy_set_header X-Forwarded-Host $host;

       auth_request /auth;
       auth_request_set $auth_username $upstream_http_x_auth_username;
       auth_request_set $auth_roles $upstream_http_x_auth_roles;

       proxy_set_header X-AUTH-username $auth_username;
       proxy_set_header X-AUTH-roles $auth_roles;
       proxy_set_header Authorization "Basic {% filter b64encode %}{{ ts_user }}:{{ ts_pw }}{% endfilter %}";
       location ~ .*/exports/.*/archive$ {
          rewrite ^(.$) $1;
          proxy_pass http://localhost:8080;
          proxy_send_timeout 10000;
          proxy_read_timeout 10000;
      }
}

location /tslogs { alias /tslogs; }

location /config {alias /opt/sca/conf;}
location /sca { alias /opt/sca/lib; }
error_page 503 @maintenance;

location @maintenance {
           root /opt/maint;
           rewrite ^(.*)$ /maintain.html break;
}

}#endofhttpsServer
