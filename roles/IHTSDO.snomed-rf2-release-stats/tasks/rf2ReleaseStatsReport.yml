---

- name: set group for root user
  set_fact:
    root_group: "root"
  when: ansible_os_family == "Debian"
  
- name: set group for root user when running on a mac
  set_fact:
    root_group: "wheel"
  when: ansible_os_family == "Darwin"

- name: set config.xml using extConfig template
  template: src=extConfig.xml.j2 dest={{ release_stats_root_dir }}/config.xml
            owner=root group=root mode=0755
  when: isExtensionRelease == True 
  
- name: set config.xml using intConfig template
  template: src=intConfig.xml.j2 dest={{ release_stats_root_dir }}/config.xml
            owner=root group={{ root_group }} mode=0755
  when: isExtensionRelease == False      
            
- name: set the runStats.sh
  template: src=runStats.sh.j2 dest={{ release_stats_root_dir }}/runStats.sh
            owner=root group={{ root_group }} mode=0755    
 
- name:  Check whether the release zip file is downloaded successfully
  stat: path={{release_stats_root_dir}}/{{release_file_base_name}}
  register: zipFileDownloaded
  
- debug: msg="zipFileDownloaded= {{ zipFileDownloaded.stat }}"
                      
- name: run the rf2 release stats report command
  shell: "{{  release_stats_root_dir }}/runStats.sh"
  register: script_results
  when: zipFileDownloaded.stat.exists == True
  
- debug: var=script_results.stdout_lines
  when: zipFileDownloaded.stat.exists == True  
  
- name: Check release stats report json files generated at {{ release_stats_root_dir }}/patterns_output/crossover_role_to_group.json
  stat: path={{ release_stats_root_dir }}/patterns_output/crossover_role_to_group.json
  register: statsCreated
  
- name: set the rf2 diff report json s3 upload script
  template: src=uploadReleaseStatsJsonToS3.sh.j2 dest={{ release_stats_root_dir }}/uploadReleaseStatsJsonToS3.sh
            owner=root group={{ root_group }} mode=0755    
  when: statsCreated.stat.exists == True
  
- name: Run rf2 release report s3 upload script
  shell: "{{  release_stats_root_dir }}/uploadReleaseStatsJsonToS3.sh"
  register: upload_results
  when: statsCreated.stat.exists == True
  
- debug: var=upload_results.stdout_lines
  when: statsCreated.stat.exists == True

- debug: var=upload_results.stderr_lines  
  when: statsCreated.stat.exists == True