---

#- name: include secret settings
#  include_vars: "{{ secret_settings }}"

- name: Apt cache update
  apt: update_cache=yes cache_valid_time=300 
    
 #include system vars
- include: "{{systemchoice}}"
  when: systemchoice is defined

- name: Stop app if running
  supervisorctl: name={{refset_app_name}} state=stopped

# https://confluence.ihtsdotools.org/display/REFSET/Deploy+Instructions

- name: install db
  include: db.yml  
  
  
- name: Install deps
  apt: name={{item}} state=latest update_cache=yes cache_valid_time=300
  with_items:
       - git
       - maven
       - unzip
       - speedometer
       
- name: Install package
  apt: name={{refset_app_name}} state=installed
  when: refset_version == 'installed'

- name: Install latest package
  apt: name={{refset_app_name}} state=latest
  when: refset_version == 'latest'

- name: Install package specific version
  apt: name={{refset_app_name}}={{ refset_version }} state=installed
  when: refset_version != 'installed' and refset_version != 'latest'



- name: Ensure group exists
  group: name={{ refset_user }} state=present

- name: Ensure user exists
  user: name={{ refset_user }} group={{ refset_user }} state=present
  
- name: set perms
  file: path="{{ refset_app_dir }}" state=directory
        owner={{ refset_user }} group="{{ refset_user }}" mode=755 
        recurse=yes  
  
 
 
 
- name: Install speedometer for use in seeing how downloads are going (initial testing only)
  apt: name=speedometer state=present update_cache=yes cache_valid_time=300  
 

  



#- name: Install tomcat - apt for now. should be bundled as the the std.
#  apt: name=tomcat7 state=present update_cache=yes cache_valid_time=300 


#- name: restart tomcat
#  service: name=tomcat7 state=restarted 


#Get Backup sql file from S3
  
#- name: Remove datadir so as to spark complete rebuild
#  file: path={{import_base_dir_sql}} state=absent
#  when: "force_zip_download_sql == True" 

#- name: make sure dataDir exists
#  file: path={{import_base_dir_sql}}  state=directory
  
#- name: make sure zip file exists
#  stat: path={{import_zip_file_sql}}
#  register: repozipimportfile  
  
#- include: setdbcontent.yml
#  when: installdbcontent == True

#- name: Start App
#  supervisorctl: name={{app_name}} state=started



