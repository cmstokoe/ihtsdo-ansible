---

 #include system vars
- include: "{{systemchoice}}"
  when: systemchoice is defined

 #include mongo setup and install
- include: mongo.yml 

- name: Install latest git package
  apt: name=git state=latest  
  
 
- name: Install latest libfontconfig1 package
  apt: name=libfontconfig1 state=latest  
  
- name: Install javascript frameworks for angular etc  
  include: js.yml
  when: "install_js == True"
  
- name: Install rest api from github  
  git: repo=https://github.com/IHTSDO/sct-snapshot-rest-api.git dest={{ rest_dir }}

- name: Install browser front end from github 
  git: repo=https://github.com/IHTSDO/sct-browser-frontend.git dest={{ front_end_dir }} 
  when: sct_browser_frontend_version != 'daily-build-browser'

- name: Install browser front end daily build browser from github 
  git: repo=https://github.com/IHTSDO/sct-browser-frontend.git  version=daily-build-browser dest={{ front_end_dir }} 
  when: sct_browser_frontend_version == 'daily-build-browser'
  
- name: Install ihtsdo-browser build browser from github 
  git: repo=https://github.com/IHTSDO/sct-browser-frontend.git  version=ihtsdo-browser dest={{ front_end_dir }} 
  when: sct_browser_frontend_version == 'ihtsdo-browser'  
  
- name: bcrypt needs c++ compiler..
  apt: name=build-essential state=latest
 
- name: Install rest server based on package.json.
  npm: path={{ rest_dir }}

- name: Configure supervisor
  template: src=supervisor.conf.j2 dest="{{ supervisor_dir }}/{{ sct_rest_app_name }}.conf"
              owner=root group=root mode=0640  
         
- name: Ensure search.log dir exists
  file: path={{ search_log_dir }} state=directory
  
- stat: path={{ search_log_dir }}/{{ search_log_file }}
  register: p
- name: create search.log if doesn't already exist
  file: path={{ search_log_dir }}/{{ search_log_file }} state=touch owner=root group=root mode=0600
  when: p.stat.exists is defined and p.stat.exists  
         
              
- name: Configure nginx for https
  template: src=nginx.conf.j2 dest={{nginx_conf_dir}}{{nginx_conf}}.conf
              owner=root group=root mode=0640  
  when: browser_http_only == false 
  
- name: Configure nginx for http only
  template: src=nginx.conf.nohttps.j2 dest={{nginx_conf_dir}}{{nginx_conf}}.conf
              owner=root group=root mode=0640  
  when: browser_http_only == true   
              
- name: restart nginx
  service: name=nginx state=restarted                           
              
- name: (re)start sct_rest_app
  supervisorctl: name={{ sct_rest_app_name }} state=restarted              

