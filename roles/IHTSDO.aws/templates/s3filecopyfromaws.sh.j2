#!/usr/bin/env bash
# Requires 2 arguments with a 2 optional ones
# $ ./s3filecopy.sh <filename> <s3BucketName> <targetDir> <s3BucketRegion>
# 

# The following variables should be set by editing this script before running it:
# The S3 backup dir
filename="$1"
s3_backup_dir_base="$2"
s3_backup_region_base="$4"
tgt_dir_base="$3"

s3_backup_dir="s3://$s3_backup_dir_base"

s3_backup_region=""
if [ "x$s3_backup_region_base" != "x" ]; then
      s3_backup_region="--region $s3_backup_region_base"
      echo "setting backup region to $s3_backup_region"
fi

tgt_dir="."

if [ "x$tgt_dir_base" != "x" ]; then
      tgt_dir="$tgt_dir_base"
      echo "setting target dir to $tgt_dir"
fi


# Prints a message to stdout with the current date and time.
echo_date() {
	echo -e "[`date +\"%Y-%m-%d %H:%M:%S\"`] $@"
}

# Prints an error message to stderr and exits the script with a non-zero status.
error_exit() {
	echo -e "[`date +\"%Y-%m-%d %H:%M:%S\"`] $@" >&2
	exit 1
}

# Main script starts here.
main() {
	echo_date "----------------------------"
	check_arguments
	mktgtdir
	copy
	exit 0
}

check_arguments() {
	if [ "x$s3_backup_dir" = "x" ]; then
		error_exit "Please set the variable s3_backup_dir before running this script. Exiting with error."
	fi

	if [ "x$filename" = "x" ]; then
		error_exit "Please set the variable filename before running this script. Exiting with error."
	fi	
}

mktgtdir(){
mkdir -pv $tgt_dir
}

copy(){
echo "copying = "$filename " from " $s3_backup_dir " to "$tgt_dir ;
if [ -f ~/.aws/config ] && [ "$s3_backup_dir" != "" ];
then
echo "Transferring backup to AWS S3";
cd $tgt_dir
/usr/bin/aws s3 cp $s3_backup_dir/$filename $filename $s3_backup_region;
echo "file transferred";
echo "process complete";
fi
}

# Ensures that only a single instance is running at any time
LOCKFILE="/opt/test_instance.lock"

(
        flock -n 200 || error_exit "Another backup script is already running. Exiting with error."
        trap "rm $LOCKFILE" EXIT
        main
) 200> $LOCKFILE


