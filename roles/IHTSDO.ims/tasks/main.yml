---
- name: Install unzip
  apt: name=unzip state=present update_cache=yes cache_valid_time=3600

- name: stop ims
  supervisorctl: name=identity-service state=stopped
  failed_when: false

- name: Install package
  apt: name=identity-service state=installed force=yes update_cache=yes
  when: ims_version == 'present'

- name: Install package
  apt: name=identity-service state=installed force=yes update_cache=yes
  when: ims_version == 'absent'

- name: Install latest package
  apt: name=identity-service state=latest force=yes update_cache=yes
  when: ims_version == 'latest'

- name: Install package specific version
  apt: name=identity-service={{ ims_version }} state=installed force=yes
  when: ims_version != 'installed' and ims_version != 'latest' and ims_version != 'absent'

- name: make sure zip file exists
  stat: path="{{ ims_install_dir }}/lib/app.war"
  register: warfile

- name: Unarchive war
  unarchive: src="{{ ims_install_dir }}/lib/app.war" dest={{ims_install_dir}}/lib/ owner={{ ims_system_user }} group={{ ims_system_group }} copy=no
  when: warfile.stat.exists == True

- name: Configure application.yml
  template: src=application.yml.j2 dest="{{ ims_install_dir }}/lib/WEB-INF/classes/application.yml" owner={{ ims_system_user }} group={{ ims_system_group }} mode=0640

- name: Configure crowd.properties
  template: src=crowd.properties.j2 dest="{{ ims_install_dir }}/lib/WEB-INF/classes/crowd.properties" owner={{ ims_system_user }} group={{ ims_system_group }} mode=0640

- name: start ims
  supervisorctl: name=identity-service state=restarted
