# {{ ansible_managed }}
#
# Database Connection Parameters
#
hibernate.dialect=org.hibernate.dialect.MySQLDialect
javax.persistence.jdbc.driver=com.mysql.jdbc.Driver
# For testing use mappingservicedbtest
javax.persistence.jdbc.url={{ otf_mapping_service_rest_jdbc_url }}
javax.persistence.jdbc.user={{ otf_mapping_service_rest_user }}
javax.persistence.jdbc.password={{ otf_mapping_service_rest_password }}

#
# JPA debugging settings
#
hibernate.show_sql=false
hibernate.format_sql=true
hibernate.use_sql_comments=true

#
# Lucene index base (default is ${user.home}/mapping/lucene/indexes
#
hibernate.search.default.indexBase={{ otf_mapping_service_rest_default_indexBase }}
hibernate.search.lucene_version=LUCENE_36
hibernate.search.default.directory_provider=filesystem

#
# Optimizations
#
hibernate.jdbc.batch_size={{ otf_mapping_service_rest_batch_size }}
hibernate.jdbc.default_batch_fetch_size={{ otf_mapping_service_rest_default_batch_fetch_size }}


#
# SNOMEDCT data location
#
loader.SNOMEDCT.input.data={{ otf_mapping_service_rest_snomedct_input_data }}
# SNOMED CT RF2 SCTID for "Synonym"
loader.defaultPreferredNames.typeId={{ otf_mapping_service_rest_defaultPreferredNames_typeId }}
# SNOMED CT RF2 SCTID for the US English language refset
loader.defaultPreferredNames.refSetId={{ otf_mapping_service_rest_defaultPreferredNames_refSetId }}
# SNOMED CT RF2 SCTID for "Preferred"
loader.defaultPreferredNames.acceptabilityId={{ otf_mapping_service_rest_defaultPreferredNames_acceptabilityId }}

#
# ICPC data location
#
loader.ICPC.input.data= {{ otf_mapping_service_rest_icpc_input_data }}
#
# ICPC Map Records data
#
loader.complexmap.input.data={{ otf_mapping_service_rest_complexmap_input_data }}
#
# ICD9CM data location
#
loader.ICD9CM.input.data={{ otf_mapping_service_rest_icd9cm_input_data }}

#
# ICD10 data location
#
loader.ICD10.input.data={{ otf_mapping_service_rest_icd10cm_input_data }}

#
# Map Notes data location
#
loader.mapnotes.input.data={{ otf_mapping_service_rest_mapnotes_input_data }}

#
# Input directory for data to import
#
import.input.dir={{ otf_mapping_service_rest_import_input_data }}

#
# Destination directory for exported data
#
export.output.dir={{ otf_mapping_service_rest_export_input_data }}

#
# Webapp base URL (currently unused)
#
base.url={{ otf_mapping_service_rest_base_url }}

