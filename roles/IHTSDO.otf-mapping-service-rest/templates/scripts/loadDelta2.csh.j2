#!/bin/csh -f
#
# Sample cron entry:
# Minute     Hour     Day of Month     Month     Day of Week
# 0      19      *       *       0       csh /home/ihtsdo/config/bin/loadDelta.csh > /home/ihtsdo/logs/loadDelta.log
#
# Configure
#
set MAPPING_CODE={{mapping_admin_app_dir}}
set MAPPING_CONFIG={{mapping_admin_app_conf}}
set MAPPING_DATA={{mapping_data_dir}}
# no longer set this
# set SNOMEDCT_VERSION=20160731

set relUrl=https://release.ihtsdotools.org/api/v1/centers/international/products/snomed_ct_ts_release/builds/
set outFile=/outputfiles
set tempdir=/tmp/dripFeed

#set dir={{mapping_data_dir}}/dripFeed
set dir=$tempdir/map/daily/dripFeed



set buildStatus = "Progress Status"
set buildOk = "completed,"
set numrels = 50

echo "------------------------------------------------"
echo "Starting ...`/bin/date`"
echo "------------------------------------------------"
echo "MAPPING_CODE = $MAPPING_CODE"
echo "MAPPING_DATA = $MAPPING_CODE"
echo "MAPPING_CONFIG = $MAPPING_CODE"

#echo "Taking down the server"
#service tomcat7 stop
#if ($status != 0) then
#        echo "ERROR stopping server"
#        exit 1
#endif

# Redeploy code
#/bin/rm -rf /var/lib/tomcat7/work/Catalina/localhost/mapping-rest
#/bin/rm -rf /var/lib/tomcat7/webapps/mapping-rest
#/bin/rm -rf /var/lib/tomcat7/webapps/ROOT
#/bin/rm -rf /var/lib/tomcat7/webapps/mapping-rest.war
#/bin/rm -rf /var/lib/tomcat7/webapps/ROOT.war

#/bin/cp -f ~/code/rest/target/mapping-rest*war /var/lib/tomcat7/webapps/mapping-rest.war
#/bin/cp -f ~/code/webapp/target/mapping-webapp*war /var/lib/tomcat7/webapps/ROOT.war

#make sure temp dirs exist
mkdir -p $tempdir
mkdir -p $dir

echo "    Delete last delta ...`/bin/date`"
cd $dir
rm -fr $dir/*
 OK if that fails

# clean up temp dir

rm -f $tempdir/buildrep.*.json
rm -f $tempdir/xx.*.json

# THIS MAY CHANGE - obviously dates are a one-time thing
echo "    Obtain latest release ...`/bin/date`"
wget "$relUrl" -O $tempdir/xx.$$.json
if ($status != 0) then
    echo "ERROR downloading builds file"
    exit 1
endif

set latestRelease = ""
set buildOKbool = false
set j = $numrels
while ($buildOKbool == false && $j > 0)
set latestRelease = `grep outputfiles_url $tempdir/xx.$$.json | sort -n | tail -$numrels | cut -d\: -f 2- | sed 's/ "//; s/",//' |  sed -n "${j}p"`
set buildreport = `grep buildReport_url $tempdir/xx.$$.json | sort -n | tail -$numrels | cut -d\: -f 2- | sed 's/ "//; s/",//' |  sed -n "${j}p"`

echo "latest release = "$latestRelease
echo "buildreport = "$buildreport

#get the buildreport and see if the Progess Status is completed

wget "$buildreport" -O $tempdir/buildrep.$$.json
set buildstat = `grep "$buildStatus" $tempdir/buildrep.$$.json | cut -d\: -f 2- | sed 's/ "//; s/"//'`

echo "buildstat = "$buildstat
if($buildstat == $buildOk) then
echo "buildOK"
set buildOKbool = true
echo "OK release = "$latestRelease
else
echo "Build not ok val = "$buildstat
endif
@ j--
echo "j = "$j
end


#if ($status != 0) then
#    echo "ERROR determining latest release"
#    exit 1
#endif


echo "buildOKbool = " $buildOKbool
if($buildOKbool == true) then
set nchar1 = `echo $relUrl | awk '{print length($0)+1}'`
#echo "nchar1 = "$nchar1
set nchar2 = `echo $outFile | awk '{print length($0)+1}'`
#echo "nchar2 = "$nchar2
set filename=`echo $latestRelease | cut -c$nchar1- | rev | cut -c$nchar2- | rev`
#echo $filename
set fullfile=$tempdir/$filename.json
if ( -f $fullfile ) then
echo "full file already exists should bug out now as have seen it before. fullfile = "$fullfile
exit 1
else
echo "fullfile does not exist will check it. fullfile = "$fullfile
endif

wget $latestRelease -O $tempdir/$filename.json
if ($status != 0) then
    echo "ERROR downloading latest release directory"
    exit 1
endif

endif

set zipFile = `grep '.zip"' $tempdir/$filename.json | grep '"url"' | cut -d\: -f 2- | sed 's/ "//; s/"//'`
if ($status != 0) then
    echo "ERROR determining zip file"
    exit 1
endif

echo "zip file = " $zipFile

#wget $zipFile
#if ($status != 0) then
#    echo "ERROR downloading .zip"
#    exit 1
#endif

#echo "    Unpack the delta ...`/bin/date`"
#unzip $zipFile:t "*/Delta/*"
#if ($status != 0) then
#    echo "ERROR unpacking .zip"
#    exit 1
#endif

#/bin/mv `find */Delta -name "*txt"` .
#if ($status != 0) then
#    echo "ERROR  moving delta files to current dir"
#    exit 1
#endif

# /bin/rm -rf *zip $tempdir/{xx,yy}.$$.json


# reconnect "doc" directory
#sleep 40

#cd /var/lib/tomcat7/webapps/ROOT
#ln -s ~ihtsdo/data/doc
#chmod -R ga+rwx ~ihtsdo/data/doc

echo "------------------------------------------------"
echo "Finished ...`/bin/date`"
echo "------------------------------------------------"
